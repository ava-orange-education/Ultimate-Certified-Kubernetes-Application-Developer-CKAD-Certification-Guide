apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-processor
  labels:
    app: order-processor
spec:
  replicas: 2
  selector:
    matchLabels:
      app: order-processor
  template:
    metadata:
      labels:
        app: order-processor
    spec:
      containers:
      - name: order-processor
        image: order-processor:latest
        ports:
        - containerPort: 8082
        env:
        - name: PORT
          value: "8082"
        - name: STORAGE_SERVICE_URL
          value: "http://localhost:8083"  # Connect to local ambassador
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 3
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: order-data
          mountPath: /app/data
      - name: storage-ambassador
        image: nginx:alpine
        ports:
        - containerPort: 8083
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        resources:
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"
      volumes:
      - name: nginx-config
        configMap:
          name: storage-proxy-config
      - name: order-data
        persistentVolumeClaim:
          claimName: order-data-pvc
